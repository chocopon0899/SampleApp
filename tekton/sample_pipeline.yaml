apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sample-pipeline
spec:
  workspaces: 
    - name: shared-workspace
    - name: maven-settings
  params:
    - name: git-url
      type: string
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.git-url)
    - name: build
      taskRef:
        name: mvn
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: maven-settings
          workspace: maven-settings
      runAfter:
        - fetch-repository
    - name: image-push
      taskRef:
        name: kaniko
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - build
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mvn
spec:
  workspaces:
    - name: source
    - name: maven-settings
  params:
    - name: GOALS
      description: Maven goals to execute
      default: ["install"]
  steps:
    - name: mvn
      image: gcr.io/cloud-builders/mvn
      workingDir: $(workspaces.source.path)
      command: ["/usr/bin/mvn"]
      args:
        - -Dmaven.repo.local=$(workspaces.maven-settings.path)
        - "$(inputs.params.GOALS)"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kaniko
spec:
  workspaces:
    - name: source
  steps:
    - name: image-push
      image: gcr.io/kaniko-project/executor:v1.22.0-debug
      workingDir: $(workspaces.source.path)
      env:
        - name: "DOCKER_CONFIG"
          value: "/kaniko/.docker"
      command:
        - /busybox/sh
      args:
        - -c
        - |
          cp /root/.docker/config.json /kaniko/.docker/config.json && ls -l &&\
          /kaniko/executor --destination=image-registry.openshift-image-registry.svc:5000/project1/sampleapp1:latest --skip-tls-verify